{"version":3,"file":"multi.js","sourceRoot":"","sources":["../../../../src/compile/selection/multi.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,mBAAmB,EAAC,MAAM,YAAY,CAAC;AAE/C,OAAO,EAAwC,KAAK,EAAE,QAAQ,EAAC,MAAM,aAAa,CAAC;AACnF,OAAO,OAAO,MAAM,sBAAsB,CAAC;AAC3C,OAAO,EAAC,YAAY,EAAC,MAAM,sBAAsB,CAAC;AAElD,MAAM,UAAU,OAAO,CAAC,KAAgB,EAAE,OAA2B;IACnE,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;IAC1B,IAAM,QAAQ,GAAG,IAAI,GAAG,KAAK,GAAG,YAAY,CAAC;IAC7C,IAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC;IAC7B,IAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,0CAA0C,CAAC,CAAC,CAAC,OAAO,CAAC;IAC1F,IAAM,MAAM,GAAG,IAAI;SAChB,GAAG,CAAC,UAAA,CAAC;QACJ,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QAC3C,gFAAgF;QAChF,OAAO,QAAQ,IAAI,QAAQ,CAAC,GAAG;YAC7B,CAAC,CAAC,MAAI,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,OAAI;iBAC3D,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,EAAE,KAAK,CAAC,MAAG,CAAA;YAClF,CAAC,CAAC,KAAG,mBAAmB,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAG,CAAC;IAC/C,CAAC,CAAC;SACD,IAAI,CAAC,IAAI,CAAC,CAAC;IAEd,yEAAyE;IACzE,uEAAuE;IACvE,sEAAsE;IACtE,0EAA0E;IAC1E,qEAAqE;IACrE,sEAAsE;IACtE,mCAAmC;IACnC,OAAO;QACL;YACE,IAAI,EAAE,IAAI,GAAG,KAAK;YAClB,KAAK,EAAE,EAAE;YACT,EAAE,EAAE;gBACF;oBACE,MAAM,EAAE,OAAO,CAAC,MAAM;oBACtB,MAAM,EACJ,8CAA8C;yBAC9C,YAAU,QAAQ,CAAC,KAAK,CAAC,kBAAa,QAAQ,mBAAc,MAAM,cAAW,CAAA;oBAC/E,KAAK,EAAE,IAAI;iBACZ;aACF;SACF;KACF,CAAC;AACJ,CAAC;AAED,IAAM,KAAK,GAAsB;IAC/B,OAAO,EAAE,OAAO;IAEhB,UAAU,EAAE,UAAC,KAAK,EAAE,OAAO;QACzB,IAAM,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;QACjC,OAAO,GAAG,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,YAAU,QAAQ,CAAC,KAAK,CAAC,MAAG,CAAC,CAAC;IAC7F,CAAC;CACF,CAAC;AAEF,eAAe,KAAK,CAAC","sourcesContent":["import {accessPathWithDatum} from '../../util';\nimport {UnitModel} from '../unit';\nimport {SelectionCompiler, SelectionComponent, TUPLE, unitName} from './selection';\nimport nearest from './transforms/nearest';\nimport {TUPLE_FIELDS} from './transforms/project';\n\nexport function signals(model: UnitModel, selCmpt: SelectionComponent) {\n  const name = selCmpt.name;\n  const fieldsSg = name + TUPLE + TUPLE_FIELDS;\n  const proj = selCmpt.project;\n  const datum = nearest.has(selCmpt) ? '(item().isVoronoi ? datum.datum : datum)' : 'datum';\n  const values = proj\n    .map(p => {\n      const fieldDef = model.fieldDef(p.channel);\n      // Binned fields should capture extents, for a range test against the raw field.\n      return fieldDef && fieldDef.bin\n        ? `[${accessPathWithDatum(model.vgField(p.channel, {}), datum)}, ` +\n            `${accessPathWithDatum(model.vgField(p.channel, {binSuffix: 'end'}), datum)}]`\n        : `${accessPathWithDatum(p.field, datum)}`;\n    })\n    .join(', ');\n\n  // Only add a discrete selection to the store if a datum is present _and_\n  // the interaction isn't occurring on a group mark. This guards against\n  // polluting interactive state with invalid values in faceted displays\n  // as the group marks are also data-driven. We force the update to account\n  // for constant null states but varying toggles (e.g., shift-click in\n  // whitespace followed by a click in whitespace; the store should only\n  // be cleared on the second click).\n  return [\n    {\n      name: name + TUPLE,\n      value: {},\n      on: [\n        {\n          events: selCmpt.events,\n          update:\n            `datum && item().mark.marktype !== 'group' ? ` +\n            `{unit: ${unitName(model)}, fields: ${fieldsSg}, values: [${values}]} : null`,\n          force: true\n        }\n      ]\n    }\n  ];\n}\n\nconst multi: SelectionCompiler = {\n  signals: signals,\n\n  modifyExpr: (model, selCmpt) => {\n    const tpl = selCmpt.name + TUPLE;\n    return tpl + ', ' + (selCmpt.resolve === 'global' ? 'null' : `{unit: ${unitName(model)}}`);\n  }\n};\n\nexport default multi;\n"]}