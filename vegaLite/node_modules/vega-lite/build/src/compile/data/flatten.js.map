{"version":3,"file":"flatten.js","sourceRoot":"","sources":["../../../../src/compile/data/flatten.ts"],"names":[],"mappings":";AAEA,OAAO,EAAC,SAAS,EAAE,IAAI,EAAC,MAAM,YAAY,CAAC;AAC3C,OAAO,EAAC,YAAY,EAAC,MAAM,YAAY,CAAC;AAExC;;GAEG;AACH;IAA0C,gDAAY;IAKpD,8BAAY,MAAoB,EAAU,SAA2B;QAArE,YACE,kBAAM,MAAM,CAAC,SAGd;QAJyC,eAAS,GAAT,SAAS,CAAkB;QAE7D,IAAA,oBAAmC,EAAlC,oBAAO,EAAE,UAAO,EAAP,4BAAyB,CAAC;QAC1C,KAAI,CAAC,SAAS,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAV,CAAU,CAAC,CAAC;;IACxD,CAAC;IARM,oCAAK,GAAZ;QACE,OAAO,IAAI,oBAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1E,CAAC;IAQM,6CAAc,GAArB;QAAA,iBAKC;QAJC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,EAAE,CAAC;YACjD,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YACjC,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAEM,mCAAI,GAAX;QACE,OAAO,sBAAoB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAG,CAAC;IACpD,CAAC;IAEM,uCAAQ,GAAf;QACQ,IAAA,mBAAsC,EAArC,mBAAe,EAAE,UAAoB,CAAC;QAE7C,IAAM,MAAM,GAAuB;YACjC,IAAI,EAAE,SAAS;YACf,MAAM,QAAA;YACN,EAAE,IAAA;SACH,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC;IACH,2BAAC;AAAD,CAAC,AAhCD,CAA0C,YAAY,GAgCrD","sourcesContent":["import {FlattenTransform as VgFlattenTransform} from 'vega';\nimport {FlattenTransform} from '../../transform';\nimport {duplicate, hash} from '../../util';\nimport {DataFlowNode} from './dataflow';\n\n/**\n * A class for flatten transform nodes\n */\nexport class FlattenTransformNode extends DataFlowNode {\n  public clone() {\n    return new FlattenTransformNode(this.parent, duplicate(this.transform));\n  }\n\n  constructor(parent: DataFlowNode, private transform: FlattenTransform) {\n    super(parent);\n    const {flatten, as = []} = this.transform;\n    this.transform.as = flatten.map((f, i) => as[i] || f);\n  }\n\n  public producedFields() {\n    return this.transform.flatten.reduce((out, field, i) => {\n      out[this.transform.as[i]] = true;\n      return out;\n    }, {});\n  }\n\n  public hash() {\n    return `FlattenTransform ${hash(this.transform)}`;\n  }\n\n  public assemble(): VgFlattenTransform {\n    const {flatten: fields, as} = this.transform;\n\n    const result: VgFlattenTransform = {\n      type: 'flatten',\n      fields,\n      as\n    };\n    return result;\n  }\n}\n"]}